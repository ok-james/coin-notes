(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{448:function(a,t,s){a.exports=s.p+"assets/img/invoke_contract.3c50ea54.png"},449:function(a,t,s){a.exports=s.p+"assets/img/invoke_direct.10b80be8.png"},450:function(a,t,s){a.exports=s.p+"assets/img/address_call.ef4dc246.png"},451:function(a,t,s){a.exports=s.p+"assets/img/delegate_call.6584dbdd.png"},452:function(a,t,s){a.exports=s.p+"assets/img/fallback_fn.b936f681.png"},453:function(a,t,s){a.exports=s.p+"assets/img/txdata_struct.33464715.png"},454:function(a,t,s){a.exports=s.p+"assets/img/receipt_struct.9973ffc8.png"},455:function(a,t,s){a.exports=s.p+"assets/img/address_type.3fde431e.png"},486:function(a,t,s){"use strict";s.r(t);var _=s(65),v=Object(_.a)({},(function(){var a=this,t=a.$createElement,_=a._self._c||t;return _("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[_("h1",{attrs:{id:"定义"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[a._v("#")]),a._v(" 定义")]),a._v(" "),_("ul",[_("li",[a._v("智能合约是运行在区块链上的一段代码，代码的逻辑定义了合约的内容")]),a._v(" "),_("li",[a._v("智能合约的帐户保存了合约当前的运行状态\n"),_("ul",[_("li",[a._v("balance：当前余额")]),a._v(" "),_("li",[a._v("nonce：交易次数")]),a._v(" "),_("li",[a._v("code：合约代码")]),a._v(" "),_("li",[a._v("storage：存储，数据结构是一棵MPT")])])]),a._v(" "),_("li",[a._v("Solidity 是智能合约最常用的语言，语法上与 JavaScnpt 很接近")])]),a._v(" "),_("h1",{attrs:{id:"外部账户调用智能合约"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#外部账户调用智能合约"}},[a._v("#")]),a._v(" 外部账户调用智能合约")]),a._v(" "),_("p",[_("img",{attrs:{src:s(448),alt:"invoke contract"}})]),a._v(" "),_("p",[_("code",[a._v("SENDER ADDRESS")]),a._v(" ：发送调用的外部账户的地址")]),a._v(" "),_("p",[_("code",[a._v("TO CONTRACT ADDRESS")]),a._v(" ：被调用的合约的地址")]),a._v(" "),_("p",[_("code",[a._v("VALUE")]),a._v(" ：发起调用时，转账到合约的以太币的数量")]),a._v(" "),_("p",[_("code",[a._v("GAS USED")]),a._v(" ：该调用花费的汽油费")]),a._v(" "),_("p",[_("code",[a._v("GAS PRICE")]),a._v(" ：单位汽油的价格")]),a._v(" "),_("p",[_("code",[a._v("GAS LIMIT")]),a._v(" ：对于该交易，外部账户最多愿意支付多少汽油")]),a._v(" "),_("p",[_("code",[a._v("TX DATA")]),a._v(" ：被调用的函数以及函数的参数都是在该字段中给出")]),a._v(" "),_("h1",{attrs:{id:"一个合约调用另一个合约"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#一个合约调用另一个合约"}},[a._v("#")]),a._v(" 一个合约调用另一个合约")]),a._v(" "),_("h2",{attrs:{id:"_1-直接调用"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-直接调用"}},[a._v("#")]),a._v(" 1. 直接调用")]),a._v(" "),_("p",[_("img",{attrs:{src:s(449),alt:"invoke directly"}})]),a._v(" "),_("h2",{attrs:{id:"_2-使用-address-类型的-call-函数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-使用-address-类型的-call-函数"}},[a._v("#")]),a._v(" 2. 使用 address 类型的 call() 函数")]),a._v(" "),_("p",[_("img",{attrs:{src:s(450),alt:"address call"}})]),a._v(" "),_("h2",{attrs:{id:"_3-代理调用-delegatecall"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-代理调用-delegatecall"}},[a._v("#")]),a._v(" 3. 代理调用 delegatecall()")]),a._v(" "),_("p",[_("img",{attrs:{src:s(451),alt:"delegate call"}})]),a._v(" "),_("h1",{attrs:{id:"特殊函数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#特殊函数"}},[a._v("#")]),a._v(" 特殊函数")]),a._v(" "),_("h2",{attrs:{id:"fallback函数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#fallback函数"}},[a._v("#")]),a._v(" fallback函数")]),a._v(" "),_("p",[_("img",{attrs:{src:s(452),alt:"fallback fn"}})]),a._v(" "),_("h1",{attrs:{id:"智能合约的创建和运行"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#智能合约的创建和运行"}},[a._v("#")]),a._v(" 智能合约的创建和运行")]),a._v(" "),_("ul",[_("li",[a._v("智能合约的代码写完后，要编译成 bytecode")]),a._v(" "),_("li",[a._v("创建合约：外部帐户发起一个转账交易到 0x0 的地址\n"),_("ul",[_("li",[a._v("转账的金额是 0 ，但是要支付汽油费")]),a._v(" "),_("li",[a._v("合约的代码放在 data 域里")])])]),a._v(" "),_("li",[a._v("智能合约运行在EVM (Ethereum Virtual Machine) 上")]),a._v(" "),_("li",[a._v("以太坊是一个交易驱动的状态机\n"),_("ul",[_("li",[a._v("调用智能合约的交易发布到区块链上后，每个矿工都会执行这个交易，从当前状态确定性地转移到下一个状态")])])])]),a._v(" "),_("h1",{attrs:{id:"汽油费-gas-fee"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#汽油费-gas-fee"}},[a._v("#")]),a._v(" 汽油费（gas fee）")]),a._v(" "),_("ul",[_("li",[_("p",[a._v("智能合约是个图灵完备的编程模型（Turing-complete Programming Model）")]),a._v(" "),_("ul",[_("li",[a._v("出现死循环怎么办？")])])]),a._v(" "),_("li",[_("p",[a._v("执行合约中的指令要收取汽油费，由发起交易的人来支付")]),a._v(" "),_("p",[_("img",{attrs:{src:s(453),alt:"txdata struct"}})]),a._v(" "),_("ul",[_("li",[a._v("AccountNonce：交易的序号，防止重放攻击")]),a._v(" "),_("li",[a._v("Price：单位汽油的价格")]),a._v(" "),_("li",[a._v("GasLimit：愿意支付的最大汽油量")]),a._v(" "),_("li",[a._v("Recipient：收款人的地址")]),a._v(" "),_("li",[a._v("Amount：转账金额，把 Amount 数量的钱转给 Recipient")]),a._v(" "),_("li",[a._v("Payload：前面提到的 data 域，表示调用的函数以及函数参数")])])]),a._v(" "),_("li",[_("p",[a._v("EVM 中不同指令消耗的汽油费是不一样的")]),a._v(" "),_("ul",[_("li",[a._v("简单的指令很便宜，复杂的或者需要存储状态的指令就很贵")])])])]),a._v(" "),_("h1",{attrs:{id:"错误处理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#错误处理"}},[a._v("#")]),a._v(" 错误处理")]),a._v(" "),_("ul",[_("li",[a._v("智能合约中不存在自定义的 try-catch 结构")]),a._v(" "),_("li",[a._v("一旦遇到异常，除特殊情况外，本次执行操作全部回滚")]),a._v(" "),_("li",[a._v("可以抛出错误的语句\n"),_("ul",[_("li",[_("p",[a._v("assert（bool condition）：如果条件不满足就抛出——用于内部错误")])]),a._v(" "),_("li",[_("p",[a._v("require（bool condition）：如果条件不满足就抛出——用于输入或者外部组件引起的错误。")]),a._v(" "),_("div",{staticClass:"language-js extra-class"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),_("span",{pre:!0,attrs:{class:"token function"}},[a._v("bid")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),_("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" payable "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),_("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 对于能接受以太币的函数，关键字 payable 是必须的。")]),a._v("\n\n    "),_("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 拍卖尚未结束")]),a._v("\n    "),_("span",{pre:!0,attrs:{class:"token function"}},[a._v("require")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("now "),_("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<=")]),a._v(" auctionEnd"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])])]),a._v(" "),_("li",[_("p",[a._v("revert()：终止运行并回滚状态变动。")])])])])]),a._v(" "),_("h1",{attrs:{id:"嵌套调用"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#嵌套调用"}},[a._v("#")]),a._v(" 嵌套调用")]),a._v(" "),_("ul",[_("li",[a._v("智能合约的执行具有原子性：执行过程中出现错误，会导致回滚")]),a._v(" "),_("li",[a._v("嵌套调用是指一个合约调用另一个合约中的函数")]),a._v(" "),_("li",[a._v("嵌套调用是否会触发连锁式的回滚?\n"),_("ul",[_("li",[a._v("如果被调用的合约执行过程中发生异常,会不会导致发起调用的。这个合约也跟着一起回滚?")]),a._v(" "),_("li",[a._v("有些调用方法会引起连锁式的回滚,有些则不会")])])]),a._v(" "),_("li",[a._v("一个合约直接向一个合约帐户里转账,没有指明调用哪个函数,仍然会引起嵌套调用")])]),a._v(" "),_("h1",{attrs:{id:"block-header"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#block-header"}},[a._v("#")]),a._v(" Block Header")]),a._v(" "),_("p",[a._v("块头中有两个字段与汽油费相关：")]),a._v(" "),_("p",[_("code",[a._v("GasUsed")]),a._v(" ：当前区块中所有交易花费的汽油费的总和")]),a._v(" "),_("p",[_("code",[a._v("GasLimit")]),a._v(" ：当前区块中能够消耗的所有汽油费的上限，用于限制单个区块中交易的数量。这个值不是固定的，而是可以在上一个区块的 "),_("code",[a._v("GasLimit")]),a._v(" 的基础上上调或者下调 1/1024 。")]),a._v(" "),_("h1",{attrs:{id:"问题与解答"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#问题与解答"}},[a._v("#")]),a._v(" 问题与解答")]),a._v(" "),_("h3",{attrs:{id:"_1-应该是先挖矿还是先执行交易与智能合约"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-应该是先挖矿还是先执行交易与智能合约"}},[a._v("#")]),a._v(" 1. 应该是先挖矿还是先执行交易与智能合约？")]),a._v(" "),_("p",[a._v("应该先执行交易与智能合约，因为在块头中有 "),_("code",[a._v("状态树")]),a._v(" 、 "),_("code",[a._v("交易树")]),a._v(" 和 "),_("code",[a._v("收据树")]),a._v(" 的三个根哈希值，所以必须先通过执行交易和智能合约，才能确定这三棵树的最终状态，从而计算出三个根哈希值，最后，再计算 nonce ，开始挖矿。")]),a._v(" "),_("h3",{attrs:{id:"_2-由于全节点在验证区块合法性时无法得到汽油费-是否会促使全节点不对区块进行验证"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-由于全节点在验证区块合法性时无法得到汽油费-是否会促使全节点不对区块进行验证"}},[a._v("#")]),a._v(" 2. 由于全节点在验证区块合法性时无法得到汽油费，是否会促使全节点不对区块进行验证？")]),a._v(" "),_("p",[a._v("首先，这会危机区块链的安全，因为协议要求全节点必须独立验证区块的合法性，如果全节点不验证的话，就可能会有非法的交易存在，从而有恶意的节点才无法篡改区块链上内容。")]),a._v(" "),_("p",[a._v("全节点必须验证发布的区块，因为如果不执行的话，全节点本地保存的三棵树的内容与其他节点就不一致了，从而就无法继续挖矿了，或者就算继续挖矿，得到的区块也是非法的。")]),a._v(" "),_("h3",{attrs:{id:"_3-执行失败的交易与智能合约需要发布到区块链上吗"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-执行失败的交易与智能合约需要发布到区块链上吗"}},[a._v("#")]),a._v(" 3. 执行失败的交易与智能合约需要发布到区块链上吗？")]),a._v(" "),_("p",[a._v("需要，因为执行失败的交易与智能合约也需要扣除汽油费，如果不将其发布到区块链上，就无法达成扣除该账户对应汽油费的共识了，所以失败的也要发布。这样看来，发布到区块链上的交易不一定是成功执行的。")]),a._v(" "),_("h1",{attrs:{id:"receipt-数据结构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#receipt-数据结构"}},[a._v("#")]),a._v(" Receipt 数据结构")]),a._v(" "),_("p",[_("img",{attrs:{src:s(454),alt:"receipt struct"}})]),a._v(" "),_("p",[_("code",[a._v("Status")]),a._v(" ：收据对应的交易的执行结果是怎样的。")]),a._v(" "),_("h1",{attrs:{id:"智能合约可以获得的区块信息"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#智能合约可以获得的区块信息"}},[a._v("#")]),a._v(" 智能合约可以获得的区块信息")]),a._v(" "),_("ul",[_("li",[_("code",[a._v("block.blockhash(uint blockNumber) returns (bytes32)")]),a._v(" ：给定区块的哈希——仅对最近的256个区块有效而不包括当前区块")]),a._v(" "),_("li",[_("code",[a._v("block.coinbase (address)")]),a._v(" ：挖出当前区块的矿工地址")]),a._v(" "),_("li",[_("code",[a._v("block.difficulty (uint)")]),a._v(" ：当前区块难度")]),a._v(" "),_("li",[_("code",[a._v("block.gaslimit (uint)")]),a._v(" ：当前区块 gas 限额")]),a._v(" "),_("li",[_("code",[a._v("block.number (uint)")]),a._v(" ：当前区块号")]),a._v(" "),_("li",[_("code",[a._v("block.timestamp (uint)")]),a._v(" ：自 unix epoch 起始当前区块以秒计的时间截")])]),a._v(" "),_("h1",{attrs:{id:"智能合约可以获得的调用信息"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#智能合约可以获得的调用信息"}},[a._v("#")]),a._v(" 智能合约可以获得的调用信息")]),a._v(" "),_("ul",[_("li",[_("code",[a._v("msg.data (bytes )")]),a._v(" ：完整的 calldata")]),a._v(" "),_("li",[_("code",[a._v("msg.gas (uint)")]),a._v(" ：剩余 gas")]),a._v(" "),_("li",[_("code",[a._v("msg.sender (address)")]),a._v(" ：消息发送者(当前调用)")]),a._v(" "),_("li",[_("code",[a._v("msg.sig (bytes4)")]),a._v(" ：calldata 的前 4 字节(也就是函数标识符)")]),a._v(" "),_("li",[_("code",[a._v("msg.value (uint)")]),a._v(" ：随消息发送的 wei 的数量")]),a._v(" "),_("li",[_("code",[a._v("now (uint)")]),a._v(" ：目前区块时间戳( "),_("code",[a._v("block.timestamp")]),a._v(" )")]),a._v(" "),_("li",[_("code",[a._v("tx.gasprice (uint)")]),a._v(" ：交易的 gas 价格")]),a._v(" "),_("li",[_("code",[a._v("tx.origin (address)")]),a._v(" ：交易发起者(完全的调用链)")])]),a._v(" "),_("p",[a._v("消息发送者与交易发起者的区别是：通过一个例子来说明一下，假设 A 是外部账户，调用了合约 C1 的 f1 函数， f1 函数又调用了合约 C2 的 f2 函数，那么对于 f2 来说，消息发送者是 C1 ，而交易发起者是 A 。")]),a._v(" "),_("h1",{attrs:{id:"地址类型-address"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#地址类型-address"}},[a._v("#")]),a._v(" 地址类型 address")]),a._v(" "),_("p",[_("img",{attrs:{src:s(455),alt:"address type"}})]),a._v(" "),_("p",[a._v("所有智能合约均可显式地转换成地址类型。")]),a._v(" "),_("h2",{attrs:{id:"解释"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#解释"}},[a._v("#")]),a._v(" 解释")]),a._v(" "),_("h3",{attrs:{id:"address-transfer-uint256-amount"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#address-transfer-uint256-amount"}},[a._v("#")]),a._v(" <address>.transfer(uint256 amount)")]),a._v(" "),_("p",[a._v("这个函数的含义是从调用该方法的智能合约中向 "),_("code",[a._v("<address>")]),a._v(" 这个地址转入 "),_("code",[a._v("amount")]),a._v(" 数量的虚拟币。")]),a._v(" "),_("h1",{attrs:{id:"三种发送-eth-的方式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#三种发送-eth-的方式"}},[a._v("#")]),a._v(" 三种发送 ETH 的方式")]),a._v(" "),_("ul",[_("li",[a._v("<address>.transfer(uint256 amount)")]),a._v(" "),_("li",[a._v("<address>.send(uint256 amount) returns (bool)")]),a._v(" "),_("li",[a._v("<address>.call.value(uint256 amount)()")])]),a._v(" "),_("p",[_("code",[a._v("transfer")]),a._v(" 和 "),_("code",[a._v("send")]),a._v(" 是专门用于转账的方法， "),_("code",[a._v("transfer")]),a._v(" 会导致连锁式回滚，而调用 "),_("code",[a._v("send")]),a._v(" 时一旦抛出异常，不会引起连锁式回滚，而是返回 "),_("code",[a._v("false")]),a._v(" 。")]),a._v(" "),_("p",[_("code",[a._v("call")]),a._v(" 本身不是用于转账的，但是可以用于调用其他函数，从而可以引起转账。")]),a._v(" "),_("p",[a._v("另外， "),_("code",[a._v("transfer")]),a._v(" 和 "),_("code",[a._v("send")]),a._v(" 在调用时，是发送固定金额的汽油费，而 "),_("code",[a._v("call")]),a._v(" 在调用时，是发送剩余的所有汽油费。")])])}),[],!1,null,null,null);t.default=v.exports}}]);